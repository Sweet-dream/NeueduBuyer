<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- @auther 青计 -->

<!-- namespace配置操作接口的名称，注意需要包含package包名 -->
<mapper namespace="com.neuedu.mapper.ReservationMapper">

    <!-- 使用select对应数据库的查询操作，id配置的是界都的方法名，resultType配置返回数据的类型 -->
     <select id="findAll" resultType ="Reservation">
      select user_account as 'userAccount',nurse_id as 'nurseId',reservation_id as 'reservationId',
       begin_time as 'beginTime',end_time as 'endTime',money,place,state from reservation
</select>


<!-- 从参数中获取数据需要使用#{属性名}，这是类EL表达式语法 -->
<insert id="add" parameterType="Reservation">
         insert into reservation(user_account,nurse_id,reservation_id,begin_time,end_time,money,place,state)   
         values(#{userAccount},#{nurseId},#{reservationId},#{beginTime},
         #{endTime},#{money},#{place},#{state})
</insert>


<!--修改需要加上where条件，否则会修改整表的数据  -->
<update id="update" parameterType="Reservation">
  update reservation set user_account =#{userAccount} ,nurse_id=#{nurseId},
  reservation_id=#{reservationId},begin_time=#{beginTime},end_time=#{endTime},money=#{money},
  place=#{place}, state=#{state} where reservation_id=#{reservationId}
</update>

<!--按条件删除  -->
<delete id = "deleteByUserAccount" parameterType = "String">
delete from reservation where user_account=#{userAccount}
</delete>

<delete id = "deleteByNurseId" parameterType = "String">
delete from reservation where nurse_id=#{nurseId}
</delete>

<delete id = "deleteByReservationId" parameterType = "String">
delete from reservation where reservation_id=#{reservationId}
</delete>



<!--查询配置可以同时有参数和返回结果  -->
 <select id="findByUserAccount" parameterType= "String" resultType="Reservation">
 select user_account as 'userAccount',nurse_id as 'nurseId',reservation_id as 'reservationId',
 begin_time as 'beginTime',end_time as 'endTime',money,place,state from reservation 
 where user_account= #{userAccount}
 </select>
 <select id="findByNurseId" parameterType= "String" resultType="Reservation">
 select user_account as 'userAccount',nurse_id as 'nurseId',reservation_id as 'reservationId',
 begin_time as 'beginTime',end_time as 'endTime',money,place,state from reservation 
 where nurse_id=#{nurseId}
 </select>
 <select id="findByReservationId" parameterType= "String" resultType="Reservation">
 select user_account as 'userAccount',nurse_id as 'nurseId',reservation_id as 'reservationId',
 begin_time as 'beginTime',end_time as 'endTime',money,place,state from reservation 
 where reservation_id= #{reservationId}
 </select>
 
 <select id="findByState" parameterType= "int" resultType="Reservation">
 select user_account as 'userAccount',nurse_id as 'nurseId',reservation_id as 'reservationId',
 begin_time as 'beginTime',end_time as 'endTime',money,place,state from reservation 
 where state= #{state}
 </select>
 

 <!-- 统计查询，查询数据库表的总记录数 --> 
 <select id="findTotal" resultType="int">
   select count(reservation_id) from reservation
 </select>
 
  
  <select id="findByPager" parameterType="Pager" resultType="Reservation">
  select user_account as 'userAccont' ,nurse_id as 'nurseId',reservation_id as 'reservationId',
  begin_time as 'beginTime',end_time as 'endTime',money,place,state from reservation 
  limit #{startIndex},#{size}
  <!-- limit 从哪条开始查询 查询多少条 -->
  </select>
  
  <select id="findByMap" parameterType="Map" resultType="Reservation">
  	select user_account as 'userAccount',nurse_id as 'nurseId',reservation_id as 'reservationId', 
    begin_time as 'beginTime',end_time as 'endTime',money,place,state from reservation where 1=1 
    <if test="userAccount != null">
		and user_account=#{userAccount}
	</if>
	<if test="nurseId != null">
		and nurse_id=#{nurseId}
	</if>
	<if test="beginTime != null">
		and begin_time=#{beginTime}
	</if>
	<if test="endTime != null">
		and end_time=#{endTime}
	</if>
	<if test="state != null">
		and state=#{state}
	</if>
  </select>
  

</mapper>